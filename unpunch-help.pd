#N struct 1004.vertgrid float x float y float w float h;
#N struct 1004.horizgrid float x float y float w float h float c;
#N struct 1004.vertline float x float y float h float c float n float
nvis;
#N struct 1004.guibar float x float y float w;
#N struct 1004.gid.button float x float y float clr float gid;
#N struct 1004.vel float x float y float value;
#N struct 1004.dur float x float y float value;
#N struct 1004.mode.button float x float y float w float c symbol param
;
#N struct 1004.show.selector float x float y float w float hilite float
id symbol label;
#N struct 1004.cursor float x float y float h float vis;
#N struct 1004.pager float x float y float c float dir float num float
nvis;
#N struct 1004.note float x float y float w float h float id float
gid float vel float dur float c float vis float mrk;
#N canvas 3 101 705 445 10;
#X obj 539 132 s pd-My_Happy_Sequencer;
#X msg 539 104 vis \$1;
#X obj 539 77 tgl 20 0 empty empty empty 17 7 0 10 -204800 -1 -1 1
1;
#X text 570 77 show GUI;
#X text 378 240 <- Container for the sequencer GUI;
#X obj 19 366 spigot;
#X obj 65 365 tgl 20 0 empty empty empty 17 7 0 10 -204800 -1 -1 1
1;
#X text 86 366 print editor messages;
#X obj 539 51 loadbang;
#X text 550 411 2018 \, Roman Haefeli;
#N canvas 0 99 454 259 counter 0;
#X obj 21 25 inlet;
#X obj 21 81 f;
#X obj 21 129 t a a;
#X obj 105 102 + 1;
#X obj 119 26 inlet;
#X msg 119 49 0;
#X obj 21 160 outlet;
#X obj 21 58 metro 150;
#X obj 21 104 mod 128;
#X obj 201 101 cnv 12 90 12 empty empty empty 20 12 0 14 -261682 -66577
0;
#X text 201 99 loop-length=;
#X obj 275 100 nbx 3 14 1 999 0 0 empty empty empty 0 -8 0 10 -261682
-1 -1 64 256;
#X obj 275 28 loadbang;
#X msg 275 51 64;
#X connect 0 0 7 0;
#X connect 1 0 8 0;
#X connect 2 0 6 0;
#X connect 2 1 3 0;
#X connect 3 0 1 1;
#X connect 4 0 5 0;
#X connect 5 0 1 1;
#X connect 7 0 1 0;
#X connect 8 0 2 0;
#X connect 11 0 8 1;
#X connect 12 0 13 0;
#X connect 13 0 11 0;
#X coords 0 -1 1 1 111 14 2 200 100;
#X restore 191 184 pd counter;
#X obj 191 209 nbx 3 18 0 9999 0 0 empty empty empty 0 -8 0 10 -204786
-1 -1 0 256;
#X obj 191 147 tgl 20 0 empty empty empty 17 7 0 10 -261682 -1 -1 0
1;
#X text 216 148 turn on/off clock;
#X obj 19 395 print EDITOR;
#X obj 221 395 print NOTES;
#X obj 221 366 spigot;
#X obj 267 365 tgl 20 0 empty empty empty 17 7 0 10 -204800 -1 -1 0
1;
#X text 290 366 print notes;
#N canvas 318 287 538 414 synth 0;
#N canvas 0 99 482 490 voice 0;
#X obj 41 288 osc~ 440;
#X obj 41 428 expr~ tanh($v1);
#X obj 40 402 *~;
#X obj 158 378 dbtorms~;
#X obj 158 353 vline~;
#X obj 157 176 pack f f;
#X obj 158 201 route 1 0;
#X obj 158 232 t a a;
#X obj 203 255 - 10;
#X obj 158 280 pack f f;
#X msg 158 308 \$1 5 0 \, \$2 30 10;
#X obj 52 311 osc~ 880.5;
#X obj 52 334 *~ 0.5;
#X obj 288 264 - 30;
#X msg 288 317 \$1 10 0 \, 0 2000 50;
#X obj 41 191 mtof;
#X obj 41 214 t a a;
#X obj 68 236 * 2;
#X obj 68 259 + 0.5;
#X obj 389 187 t a a;
#X obj 389 210 *;
#X obj 389 164 / 100;
#X obj 389 233 t a a;
#X obj 389 256 *;
#X obj 389 279 rmstodb;
#X obj 41 31 inlet;
#X obj 41 60 unpack f f;
#X obj 157 96 moses 1;
#X obj 196 122 t b a;
#X msg 196 145 1;
#X msg 157 126 0;
#X obj 41 451 outlet~;
#X connect 0 0 2 0;
#X connect 1 0 31 0;
#X connect 2 0 1 0;
#X connect 3 0 2 1;
#X connect 4 0 3 0;
#X connect 5 0 6 0;
#X connect 6 0 7 0;
#X connect 6 1 13 0;
#X connect 7 0 9 0;
#X connect 7 1 8 0;
#X connect 8 0 9 1;
#X connect 9 0 10 0;
#X connect 10 0 4 0;
#X connect 11 0 12 0;
#X connect 12 0 2 0;
#X connect 13 0 14 0;
#X connect 14 0 4 0;
#X connect 15 0 16 0;
#X connect 16 0 0 0;
#X connect 16 1 17 0;
#X connect 17 0 18 0;
#X connect 18 0 11 0;
#X connect 19 0 20 0;
#X connect 19 1 20 1;
#X connect 20 0 22 0;
#X connect 21 0 19 0;
#X connect 22 0 23 0;
#X connect 22 1 23 1;
#X connect 23 0 24 0;
#X connect 24 0 5 1;
#X connect 25 0 26 0;
#X connect 26 0 15 0;
#X connect 26 1 27 0;
#X connect 27 0 30 0;
#X connect 27 1 28 0;
#X connect 28 0 29 0;
#X connect 28 1 21 0;
#X connect 29 0 5 0;
#X connect 30 0 5 0;
#X restore 13 120 pd voice;
#X obj 13 18 inlet;
#X obj 13 66 pack f f f;
#X obj 13 169 +~;
#X obj 33 220 hsl 100 15 0 1 0 0 \$0.bli \$0.bla empty -2 -8 0 10 -261682
-1 -1 0 1;
#X obj 58 248 t a a;
#X msg 58 294 \$1 50;
#X obj 58 317 line~;
#X obj 8 346 *~;
#X obj 7 387 dac~ 1 2;
#N canvas 0 99 482 490 voice 0;
#X obj 41 288 osc~ 440;
#X obj 41 428 expr~ tanh($v1);
#X obj 40 402 *~;
#X obj 158 378 dbtorms~;
#X obj 158 353 vline~;
#X obj 157 176 pack f f;
#X obj 158 201 route 1 0;
#X obj 158 232 t a a;
#X obj 203 255 - 10;
#X obj 158 280 pack f f;
#X msg 158 308 \$1 5 0 \, \$2 30 10;
#X obj 52 311 osc~ 880.5;
#X obj 52 334 *~ 0.5;
#X obj 288 264 - 30;
#X msg 288 317 \$1 10 0 \, 0 2000 50;
#X obj 41 191 mtof;
#X obj 41 214 t a a;
#X obj 68 236 * 2;
#X obj 68 259 + 0.5;
#X obj 389 187 t a a;
#X obj 389 210 *;
#X obj 389 164 / 100;
#X obj 389 233 t a a;
#X obj 389 256 *;
#X obj 389 279 rmstodb;
#X obj 41 31 inlet;
#X obj 41 60 unpack f f;
#X obj 157 96 moses 1;
#X obj 196 122 t b a;
#X msg 196 145 1;
#X msg 157 126 0;
#X obj 41 451 outlet~;
#X connect 0 0 2 0;
#X connect 1 0 31 0;
#X connect 2 0 1 0;
#X connect 3 0 2 1;
#X connect 4 0 3 0;
#X connect 5 0 6 0;
#X connect 6 0 7 0;
#X connect 6 1 13 0;
#X connect 7 0 9 0;
#X connect 7 1 8 0;
#X connect 8 0 9 1;
#X connect 9 0 10 0;
#X connect 10 0 4 0;
#X connect 11 0 12 0;
#X connect 12 0 2 0;
#X connect 13 0 14 0;
#X connect 14 0 4 0;
#X connect 15 0 16 0;
#X connect 16 0 0 0;
#X connect 16 1 17 0;
#X connect 17 0 18 0;
#X connect 18 0 11 0;
#X connect 19 0 20 0;
#X connect 19 1 20 1;
#X connect 20 0 22 0;
#X connect 21 0 19 0;
#X connect 22 0 23 0;
#X connect 22 1 23 1;
#X connect 23 0 24 0;
#X connect 24 0 5 1;
#X connect 25 0 26 0;
#X connect 26 0 15 0;
#X connect 26 1 27 0;
#X connect 27 0 30 0;
#X connect 27 1 28 0;
#X connect 28 0 29 0;
#X connect 28 1 21 0;
#X connect 29 0 5 0;
#X connect 30 0 5 0;
#X restore 73 120 pd voice;
#N canvas 0 99 482 490 voice 0;
#X obj 41 288 osc~ 440;
#X obj 41 428 expr~ tanh($v1);
#X obj 40 402 *~;
#X obj 158 378 dbtorms~;
#X obj 158 353 vline~;
#X obj 157 176 pack f f;
#X obj 158 201 route 1 0;
#X obj 158 232 t a a;
#X obj 203 255 - 10;
#X obj 158 280 pack f f;
#X msg 158 308 \$1 5 0 \, \$2 30 10;
#X obj 52 311 osc~ 880.5;
#X obj 52 334 *~ 0.5;
#X obj 288 264 - 30;
#X msg 288 317 \$1 10 0 \, 0 2000 50;
#X obj 41 191 mtof;
#X obj 41 214 t a a;
#X obj 68 236 * 2;
#X obj 68 259 + 0.5;
#X obj 389 187 t a a;
#X obj 389 210 *;
#X obj 389 164 / 100;
#X obj 389 233 t a a;
#X obj 389 256 *;
#X obj 389 279 rmstodb;
#X obj 41 31 inlet;
#X obj 41 60 unpack f f;
#X obj 157 96 moses 1;
#X obj 196 122 t b a;
#X msg 196 145 1;
#X msg 157 126 0;
#X obj 41 451 outlet~;
#X connect 0 0 2 0;
#X connect 1 0 31 0;
#X connect 2 0 1 0;
#X connect 3 0 2 1;
#X connect 4 0 3 0;
#X connect 5 0 6 0;
#X connect 6 0 7 0;
#X connect 6 1 13 0;
#X connect 7 0 9 0;
#X connect 7 1 8 0;
#X connect 8 0 9 1;
#X connect 9 0 10 0;
#X connect 10 0 4 0;
#X connect 11 0 12 0;
#X connect 12 0 2 0;
#X connect 13 0 14 0;
#X connect 14 0 4 0;
#X connect 15 0 16 0;
#X connect 16 0 0 0;
#X connect 16 1 17 0;
#X connect 17 0 18 0;
#X connect 18 0 11 0;
#X connect 19 0 20 0;
#X connect 19 1 20 1;
#X connect 20 0 22 0;
#X connect 21 0 19 0;
#X connect 22 0 23 0;
#X connect 22 1 23 1;
#X connect 23 0 24 0;
#X connect 24 0 5 1;
#X connect 25 0 26 0;
#X connect 26 0 15 0;
#X connect 26 1 27 0;
#X connect 27 0 30 0;
#X connect 27 1 28 0;
#X connect 28 0 29 0;
#X connect 28 1 21 0;
#X connect 29 0 5 0;
#X connect 30 0 5 0;
#X restore 133 120 pd voice;
#N canvas 0 99 482 490 voice 0;
#X obj 41 288 osc~ 440;
#X obj 41 428 expr~ tanh($v1);
#X obj 40 402 *~;
#X obj 158 378 dbtorms~;
#X obj 158 353 vline~;
#X obj 157 176 pack f f;
#X obj 158 201 route 1 0;
#X obj 158 232 t a a;
#X obj 203 255 - 10;
#X obj 158 280 pack f f;
#X msg 158 308 \$1 5 0 \, \$2 30 10;
#X obj 52 311 osc~ 880.5;
#X obj 52 334 *~ 0.5;
#X obj 288 264 - 30;
#X msg 288 317 \$1 10 0 \, 0 2000 50;
#X obj 41 191 mtof;
#X obj 41 214 t a a;
#X obj 68 236 * 2;
#X obj 68 259 + 0.5;
#X obj 389 187 t a a;
#X obj 389 210 *;
#X obj 389 164 / 100;
#X obj 389 233 t a a;
#X obj 389 256 *;
#X obj 389 279 rmstodb;
#X obj 41 31 inlet;
#X obj 41 60 unpack f f;
#X obj 157 96 moses 1;
#X obj 196 122 t b a;
#X msg 196 145 1;
#X msg 157 126 0;
#X obj 41 451 outlet~;
#X connect 0 0 2 0;
#X connect 1 0 31 0;
#X connect 2 0 1 0;
#X connect 3 0 2 1;
#X connect 4 0 3 0;
#X connect 5 0 6 0;
#X connect 6 0 7 0;
#X connect 6 1 13 0;
#X connect 7 0 9 0;
#X connect 7 1 8 0;
#X connect 8 0 9 1;
#X connect 9 0 10 0;
#X connect 10 0 4 0;
#X connect 11 0 12 0;
#X connect 12 0 2 0;
#X connect 13 0 14 0;
#X connect 14 0 4 0;
#X connect 15 0 16 0;
#X connect 16 0 0 0;
#X connect 16 1 17 0;
#X connect 17 0 18 0;
#X connect 18 0 11 0;
#X connect 19 0 20 0;
#X connect 19 1 20 1;
#X connect 20 0 22 0;
#X connect 21 0 19 0;
#X connect 22 0 23 0;
#X connect 22 1 23 1;
#X connect 23 0 24 0;
#X connect 24 0 5 1;
#X connect 25 0 26 0;
#X connect 26 0 15 0;
#X connect 26 1 27 0;
#X connect 27 0 30 0;
#X connect 27 1 28 0;
#X connect 28 0 29 0;
#X connect 28 1 21 0;
#X connect 29 0 5 0;
#X connect 30 0 5 0;
#X restore 193 120 pd voice;
#N canvas 0 99 482 490 voice 0;
#X obj 41 288 osc~ 440;
#X obj 41 428 expr~ tanh($v1);
#X obj 40 402 *~;
#X obj 158 378 dbtorms~;
#X obj 158 353 vline~;
#X obj 157 176 pack f f;
#X obj 158 201 route 1 0;
#X obj 158 232 t a a;
#X obj 203 255 - 10;
#X obj 158 280 pack f f;
#X msg 158 308 \$1 5 0 \, \$2 30 10;
#X obj 52 311 osc~ 880.5;
#X obj 52 334 *~ 0.5;
#X obj 288 264 - 30;
#X msg 288 317 \$1 10 0 \, 0 2000 50;
#X obj 41 191 mtof;
#X obj 41 214 t a a;
#X obj 68 236 * 2;
#X obj 68 259 + 0.5;
#X obj 389 187 t a a;
#X obj 389 210 *;
#X obj 389 164 / 100;
#X obj 389 233 t a a;
#X obj 389 256 *;
#X obj 389 279 rmstodb;
#X obj 41 31 inlet;
#X obj 41 60 unpack f f;
#X obj 157 96 moses 1;
#X obj 196 122 t b a;
#X msg 196 145 1;
#X msg 157 126 0;
#X obj 41 451 outlet~;
#X connect 0 0 2 0;
#X connect 1 0 31 0;
#X connect 2 0 1 0;
#X connect 3 0 2 1;
#X connect 4 0 3 0;
#X connect 5 0 6 0;
#X connect 6 0 7 0;
#X connect 6 1 13 0;
#X connect 7 0 9 0;
#X connect 7 1 8 0;
#X connect 8 0 9 1;
#X connect 9 0 10 0;
#X connect 10 0 4 0;
#X connect 11 0 12 0;
#X connect 12 0 2 0;
#X connect 13 0 14 0;
#X connect 14 0 4 0;
#X connect 15 0 16 0;
#X connect 16 0 0 0;
#X connect 16 1 17 0;
#X connect 17 0 18 0;
#X connect 18 0 11 0;
#X connect 19 0 20 0;
#X connect 19 1 20 1;
#X connect 20 0 22 0;
#X connect 21 0 19 0;
#X connect 22 0 23 0;
#X connect 22 1 23 1;
#X connect 23 0 24 0;
#X connect 24 0 5 1;
#X connect 25 0 26 0;
#X connect 26 0 15 0;
#X connect 26 1 27 0;
#X connect 27 0 30 0;
#X connect 27 1 28 0;
#X connect 28 0 29 0;
#X connect 28 1 21 0;
#X connect 29 0 5 0;
#X connect 30 0 5 0;
#X restore 253 120 pd voice;
#N canvas 0 99 482 490 voice 0;
#X obj 41 288 osc~ 440;
#X obj 41 428 expr~ tanh($v1);
#X obj 40 402 *~;
#X obj 158 378 dbtorms~;
#X obj 158 353 vline~;
#X obj 157 176 pack f f;
#X obj 158 201 route 1 0;
#X obj 158 232 t a a;
#X obj 203 255 - 10;
#X obj 158 280 pack f f;
#X msg 158 308 \$1 5 0 \, \$2 30 10;
#X obj 52 311 osc~ 880.5;
#X obj 52 334 *~ 0.5;
#X obj 288 264 - 30;
#X msg 288 317 \$1 10 0 \, 0 2000 50;
#X obj 41 191 mtof;
#X obj 41 214 t a a;
#X obj 68 236 * 2;
#X obj 68 259 + 0.5;
#X obj 389 187 t a a;
#X obj 389 210 *;
#X obj 389 164 / 100;
#X obj 389 233 t a a;
#X obj 389 256 *;
#X obj 389 279 rmstodb;
#X obj 41 31 inlet;
#X obj 41 60 unpack f f;
#X obj 157 96 moses 1;
#X obj 196 122 t b a;
#X msg 196 145 1;
#X msg 157 126 0;
#X obj 41 451 outlet~;
#X connect 0 0 2 0;
#X connect 1 0 31 0;
#X connect 2 0 1 0;
#X connect 3 0 2 1;
#X connect 4 0 3 0;
#X connect 5 0 6 0;
#X connect 6 0 7 0;
#X connect 6 1 13 0;
#X connect 7 0 9 0;
#X connect 7 1 8 0;
#X connect 8 0 9 1;
#X connect 9 0 10 0;
#X connect 10 0 4 0;
#X connect 11 0 12 0;
#X connect 12 0 2 0;
#X connect 13 0 14 0;
#X connect 14 0 4 0;
#X connect 15 0 16 0;
#X connect 16 0 0 0;
#X connect 16 1 17 0;
#X connect 17 0 18 0;
#X connect 18 0 11 0;
#X connect 19 0 20 0;
#X connect 19 1 20 1;
#X connect 20 0 22 0;
#X connect 21 0 19 0;
#X connect 22 0 23 0;
#X connect 22 1 23 1;
#X connect 23 0 24 0;
#X connect 24 0 5 1;
#X connect 25 0 26 0;
#X connect 26 0 15 0;
#X connect 26 1 27 0;
#X connect 27 0 30 0;
#X connect 27 1 28 0;
#X connect 28 0 29 0;
#X connect 28 1 21 0;
#X connect 29 0 5 0;
#X connect 30 0 5 0;
#X restore 313 120 pd voice;
#X obj 58 271 *;
#X obj 13 89 route 1 2 3 4 5 6, f 61;
#X obj 13 43 poly 6 1, f 10;
#X obj 135 220 tgl 15 0 \$0.bli \$0.bla empty 17 7 0 10 -261682 -1
-1 0 1;
#X msg 147 261 dsp \$1;
#X obj 147 284 s pd;
#X obj 52 348 *~;
#X connect 0 0 3 0;
#X connect 1 0 17 0;
#X connect 2 0 16 0;
#X connect 3 0 8 0;
#X connect 3 0 21 0;
#X connect 4 0 5 0;
#X connect 5 0 15 0;
#X connect 5 1 15 1;
#X connect 6 0 7 0;
#X connect 7 0 8 1;
#X connect 7 0 21 1;
#X connect 8 0 9 0;
#X connect 10 0 3 0;
#X connect 11 0 3 0;
#X connect 12 0 3 1;
#X connect 13 0 3 1;
#X connect 14 0 3 1;
#X connect 15 0 6 0;
#X connect 16 0 0 0;
#X connect 16 1 10 0;
#X connect 16 2 11 0;
#X connect 16 3 12 0;
#X connect 16 4 13 0;
#X connect 16 5 14 0;
#X connect 17 0 2 0;
#X connect 17 1 2 1;
#X connect 17 2 2 2;
#X connect 18 0 19 0;
#X connect 19 0 20 0;
#X connect 21 0 9 1;
#X coords 0 -1 1 1 120 35 1 30 200;
#X restore 248 298 pd synth;
#X obj 20 288 s \$0.from;
#X obj 19 339 r \$0.from;
#X obj 20 201 r \$0.to;
#X obj 71 201 r \$0.from;
#N canvas 170 116 645 392 note.manipulation 0;
#X obj 18 190 s \$0.to;
#X msg 78 38 note create 4 65 80 12 0;
#X text 77 14 NOTE MANIPULATION;
#X msg 78 68 note change duration 4 65 16;
#X msg 78 98 note change velocity 4 65 120;
#X msg 78 128 note change gid 4 65 1;
#X text 279 38 create a note with [step \, pitch \, velocity \, duration
\, gid];
#X text 279 68 change a note's duration [step \, pitch \, duration]
;
#X text 279 98 chage a note's velocity [step \, pitch \, velocity]
;
#X text 279 128 change a note's group [step \, pitch \, gid];
#X text 279 158 delete a note [step \, pitch];
#X msg 78 158 note delete 4 65;
#X text 82 228 step: denotes the temporal position of the note (0 -
inf);
#X text 82 248 pitch: refers to the MIDI pitch (0 - 127);
#X text 82 268 duration: period between note-on and note-off (1 - inf)
;
#X text 82 288 velocity: (1 -127) for note-on \, 0 for note-off;
#X text 82 308 gid: group id relevant for editing (0 -5);
#X connect 1 0 0 0;
#X connect 3 0 0 0;
#X connect 4 0 0 0;
#X connect 5 0 0 0;
#X connect 11 0 0 0;
#X restore 20 129 pd note.manipulation;
#N canvas 141 99 404 505 manual 0;
#X text 15 11 Display;
#X text 15 21 -------;
#X text 15 121 Clock;
#X text 15 131 -----;
#X text 15 251 Editing;
#X text 15 261 -------;
#X text 14 150 For most flexible use \, [unpunch] doesn't have an internal
clock \, but is driven by an external clock sent to its right inlet.
The most simple clock is a counter counting upwards in regular intervals.
Loops are played by inserting a modulo into the counter. Note that
all active notes are muted when a jump in the clock occurs in order
to avoid hanging notes.;
#X text 15 40 [unpunch] draws its graphical interface to a canvas whose
name is specified as first argument to [unpunch] and which can be an
another patch \, abstraction \, or subpatch. In any case \, the canvas
should be empty as it will be cleared during redraws.;
#X text 14 280 Notes are created by clicking on the grid and are deleted
by double-clicking them. The values in the top section define the default
properties for newly created notes and include duration \, velocity
and gid (group id). The duration of notes is changed by dragging the
right end of a note horizontally. The grey switch on the right selects
which property is displayed numerically on each note. Changig the numbers
is an alternative way to edit notes. The grey bar above each default
value can be toggled between red and grey. If red \, the default value
is applied immediately when clicking a note.;
#X text 14 430 NOTE: In order to allow real-time state synchronisation
\, manual edits only generate messages to the left outlet \, but do
not actually perform the actions. For the messages to have an effect
\, loop back left outlet to left inlet.;
#X restore 20 69 pd manual;
#X text 404 274 arg1: name of canvas to draw interface;
#X text 391 304 inlet0: editor commands and configuration;
#X text 391 324 inlet1: sequencer input (clock);
#X text 386 354 outlet0: generated edit commands (mouse actions);
#X text 386 374 outlet1: notes ([pitch \, velocity] tuples);
#N canvas 170 115 628 440 interface.configuration 0;
#X msg 78 229 redraw;
#X obj 18 300 s \$0.to;
#X text 229 79 set step height (pixel;
#X text 229 49 set step width (pixel);
#X text 229 109 set the number of steps displayed in a single page
;
#X text 229 139 set the vertical number of steps;
#X text 229 229 redraw display after having changed configuration;
#X text 229 169 set the nuumber of subdivision that fit into a division
;
#X text 229 199 set the number of steps that fit into a subdivision
;
#X text 229 259 switch display to page with given number (starting
at 0) [implies a redraw of display];
#X msg 78 259 page 3;
#X msg 78 109 set stepsperpage 64;
#X msg 78 139 set pitchrange 48;
#X msg 78 49 set stepviswidth 15;
#X msg 78 79 set stepvisheight 14;
#X text 78 21 INTERFACE CONFIGURATION;
#X msg 78 169 set griddivision 4;
#X msg 78 199 set gridsubdivision 4;
#X connect 0 0 1 0;
#X connect 10 0 1 0;
#X connect 11 0 1 0;
#X connect 12 0 1 0;
#X connect 13 0 1 0;
#X connect 14 0 1 0;
#X connect 16 0 1 0;
#X connect 17 0 1 0;
#X restore 20 99 pd interface.configuration;
#X obj 2 2 cnv 15 700 24 empty empty empty 20 12 0 14 -233017 -66577
0;
#X obj 17 238 cnv 15 360 24 empty empty empty 20 12 0 14 -233017 -66577
0;
#X obj 20 241 unpunch pd-My_Happy_Sequencer;
#N canvas 709 99 1006 749 My_Happy_Sequencer 1;
#X scalar 1004.vertgrid 30 53 14 671 \;;
#X scalar 1004.vertgrid 45 53 14 671 \;;
#X scalar 1004.vertgrid 60 53 14 671 \;;
#X scalar 1004.vertgrid 75 53 14 671 \;;
#X scalar 1004.vertgrid 90 53 14 671 \;;
#X scalar 1004.vertgrid 105 53 14 671 \;;
#X scalar 1004.vertgrid 120 53 14 671 \;;
#X scalar 1004.vertgrid 135 53 14 671 \;;
#X scalar 1004.vertgrid 150 53 14 671 \;;
#X scalar 1004.vertgrid 165 53 14 671 \;;
#X scalar 1004.vertgrid 180 53 14 671 \;;
#X scalar 1004.vertgrid 195 53 14 671 \;;
#X scalar 1004.vertgrid 210 53 14 671 \;;
#X scalar 1004.vertgrid 225 53 14 671 \;;
#X scalar 1004.vertgrid 240 53 14 671 \;;
#X scalar 1004.vertgrid 255 53 14 671 \;;
#X scalar 1004.vertgrid 270 53 14 671 \;;
#X scalar 1004.vertgrid 285 53 14 671 \;;
#X scalar 1004.vertgrid 300 53 14 671 \;;
#X scalar 1004.vertgrid 315 53 14 671 \;;
#X scalar 1004.vertgrid 330 53 14 671 \;;
#X scalar 1004.vertgrid 345 53 14 671 \;;
#X scalar 1004.vertgrid 360 53 14 671 \;;
#X scalar 1004.vertgrid 375 53 14 671 \;;
#X scalar 1004.vertgrid 390 53 14 671 \;;
#X scalar 1004.vertgrid 405 53 14 671 \;;
#X scalar 1004.vertgrid 420 53 14 671 \;;
#X scalar 1004.vertgrid 435 53 14 671 \;;
#X scalar 1004.vertgrid 450 53 14 671 \;;
#X scalar 1004.vertgrid 465 53 14 671 \;;
#X scalar 1004.vertgrid 480 53 14 671 \;;
#X scalar 1004.vertgrid 495 53 14 671 \;;
#X scalar 1004.vertgrid 510 53 14 671 \;;
#X scalar 1004.vertgrid 525 53 14 671 \;;
#X scalar 1004.vertgrid 540 53 14 671 \;;
#X scalar 1004.vertgrid 555 53 14 671 \;;
#X scalar 1004.vertgrid 570 53 14 671 \;;
#X scalar 1004.vertgrid 585 53 14 671 \;;
#X scalar 1004.vertgrid 600 53 14 671 \;;
#X scalar 1004.vertgrid 615 53 14 671 \;;
#X scalar 1004.vertgrid 630 53 14 671 \;;
#X scalar 1004.vertgrid 645 53 14 671 \;;
#X scalar 1004.vertgrid 660 53 14 671 \;;
#X scalar 1004.vertgrid 675 53 14 671 \;;
#X scalar 1004.vertgrid 690 53 14 671 \;;
#X scalar 1004.vertgrid 705 53 14 671 \;;
#X scalar 1004.vertgrid 720 53 14 671 \;;
#X scalar 1004.vertgrid 735 53 14 671 \;;
#X scalar 1004.vertgrid 750 53 14 671 \;;
#X scalar 1004.vertgrid 765 53 14 671 \;;
#X scalar 1004.vertgrid 780 53 14 671 \;;
#X scalar 1004.vertgrid 795 53 14 671 \;;
#X scalar 1004.vertgrid 810 53 14 671 \;;
#X scalar 1004.vertgrid 825 53 14 671 \;;
#X scalar 1004.vertgrid 840 53 14 671 \;;
#X scalar 1004.vertgrid 855 53 14 671 \;;
#X scalar 1004.vertgrid 870 53 14 671 \;;
#X scalar 1004.vertgrid 885 53 14 671 \;;
#X scalar 1004.vertgrid 900 53 14 671 \;;
#X scalar 1004.vertgrid 915 53 14 671 \;;
#X scalar 1004.vertgrid 930 53 14 671 \;;
#X scalar 1004.vertgrid 945 53 14 671 \;;
#X scalar 1004.vertgrid 960 53 14 671 \;;
#X scalar 1004.vertgrid 975 53 14 671 \;;
#X scalar 1004.horizgrid 30 53 960 13 887 \;;
#X scalar 1004.horizgrid 30 67 960 13 777 \;;
#X scalar 1004.horizgrid 30 81 960 13 887 \;;
#X scalar 1004.horizgrid 30 95 960 13 777 \;;
#X scalar 1004.horizgrid 30 109 960 13 887 \;;
#X scalar 1004.horizgrid 30 123 960 13 777 \;;
#X scalar 1004.horizgrid 30 137 960 13 887 \;;
#X scalar 1004.horizgrid 30 151 960 13 887 \;;
#X scalar 1004.horizgrid 30 165 960 13 777 \;;
#X scalar 1004.horizgrid 30 179 960 13 887 \;;
#X scalar 1004.horizgrid 30 193 960 13 777 \;;
#X scalar 1004.horizgrid 30 207 960 13 887 \;;
#X scalar 1004.horizgrid 30 221 960 13 887 \;;
#X scalar 1004.horizgrid 30 235 960 13 777 \;;
#X scalar 1004.horizgrid 30 249 960 13 887 \;;
#X scalar 1004.horizgrid 30 263 960 13 777 \;;
#X scalar 1004.horizgrid 30 277 960 13 887 \;;
#X scalar 1004.horizgrid 30 291 960 13 777 \;;
#X scalar 1004.horizgrid 30 305 960 13 887 \;;
#X scalar 1004.horizgrid 30 319 960 13 887 \;;
#X scalar 1004.horizgrid 30 333 960 13 777 \;;
#X scalar 1004.horizgrid 30 347 960 13 887 \;;
#X scalar 1004.horizgrid 30 361 960 13 777 \;;
#X scalar 1004.horizgrid 30 375 960 13 887 \;;
#X scalar 1004.horizgrid 30 389 960 13 887 \;;
#X scalar 1004.horizgrid 30 403 960 13 777 \;;
#X scalar 1004.horizgrid 30 417 960 13 887 \;;
#X scalar 1004.horizgrid 30 431 960 13 777 \;;
#X scalar 1004.horizgrid 30 445 960 13 887 \;;
#X scalar 1004.horizgrid 30 459 960 13 777 \;;
#X scalar 1004.horizgrid 30 473 960 13 887 \;;
#X scalar 1004.horizgrid 30 487 960 13 887 \;;
#X scalar 1004.horizgrid 30 501 960 13 777 \;;
#X scalar 1004.horizgrid 30 515 960 13 887 \;;
#X scalar 1004.horizgrid 30 529 960 13 777 \;;
#X scalar 1004.horizgrid 30 543 960 13 887 \;;
#X scalar 1004.horizgrid 30 557 960 13 887 \;;
#X scalar 1004.horizgrid 30 571 960 13 777 \;;
#X scalar 1004.horizgrid 30 585 960 13 887 \;;
#X scalar 1004.horizgrid 30 599 960 13 777 \;;
#X scalar 1004.horizgrid 30 613 960 13 887 \;;
#X scalar 1004.horizgrid 30 627 960 13 777 \;;
#X scalar 1004.horizgrid 30 641 960 13 887 \;;
#X scalar 1004.horizgrid 30 655 960 13 887 \;;
#X scalar 1004.horizgrid 30 669 960 13 777 \;;
#X scalar 1004.horizgrid 30 683 960 13 887 \;;
#X scalar 1004.horizgrid 30 697 960 13 777 \;;
#X scalar 1004.horizgrid 30 711 960 13 887 \;;
#X scalar 1004.vertline 30 53 672 0 1 1 \;;
#X scalar 1004.vertline 45 53 672 888 1 0 \;;
#X scalar 1004.vertline 60 53 672 888 1 0 \;;
#X scalar 1004.vertline 75 53 672 888 1 0 \;;
#X scalar 1004.vertline 90 53 672 666 1 0 \;;
#X scalar 1004.vertline 105 53 672 888 1 0 \;;
#X scalar 1004.vertline 120 53 672 888 1 0 \;;
#X scalar 1004.vertline 135 53 672 888 1 0 \;;
#X scalar 1004.vertline 150 53 672 666 1 0 \;;
#X scalar 1004.vertline 165 53 672 888 1 0 \;;
#X scalar 1004.vertline 180 53 672 888 1 0 \;;
#X scalar 1004.vertline 195 53 672 888 1 0 \;;
#X scalar 1004.vertline 210 53 672 666 1 0 \;;
#X scalar 1004.vertline 225 53 672 888 1 0 \;;
#X scalar 1004.vertline 240 53 672 888 1 0 \;;
#X scalar 1004.vertline 255 53 672 888 1 0 \;;
#X scalar 1004.vertline 270 53 672 0 2 1 \;;
#X scalar 1004.vertline 285 53 672 888 2 0 \;;
#X scalar 1004.vertline 300 53 672 888 2 0 \;;
#X scalar 1004.vertline 315 53 672 888 2 0 \;;
#X scalar 1004.vertline 330 53 672 666 2 0 \;;
#X scalar 1004.vertline 345 53 672 888 2 0 \;;
#X scalar 1004.vertline 360 53 672 888 2 0 \;;
#X scalar 1004.vertline 375 53 672 888 2 0 \;;
#X scalar 1004.vertline 390 53 672 666 2 0 \;;
#X scalar 1004.vertline 405 53 672 888 2 0 \;;
#X scalar 1004.vertline 420 53 672 888 2 0 \;;
#X scalar 1004.vertline 435 53 672 888 2 0 \;;
#X scalar 1004.vertline 450 53 672 666 2 0 \;;
#X scalar 1004.vertline 465 53 672 888 2 0 \;;
#X scalar 1004.vertline 480 53 672 888 2 0 \;;
#X scalar 1004.vertline 495 53 672 888 2 0 \;;
#X scalar 1004.vertline 510 53 672 0 3 1 \;;
#X scalar 1004.vertline 525 53 672 888 3 0 \;;
#X scalar 1004.vertline 540 53 672 888 3 0 \;;
#X scalar 1004.vertline 555 53 672 888 3 0 \;;
#X scalar 1004.vertline 570 53 672 666 3 0 \;;
#X scalar 1004.vertline 585 53 672 888 3 0 \;;
#X scalar 1004.vertline 600 53 672 888 3 0 \;;
#X scalar 1004.vertline 615 53 672 888 3 0 \;;
#X scalar 1004.vertline 630 53 672 666 3 0 \;;
#X scalar 1004.vertline 645 53 672 888 3 0 \;;
#X scalar 1004.vertline 660 53 672 888 3 0 \;;
#X scalar 1004.vertline 675 53 672 888 3 0 \;;
#X scalar 1004.vertline 690 53 672 666 3 0 \;;
#X scalar 1004.vertline 705 53 672 888 3 0 \;;
#X scalar 1004.vertline 720 53 672 888 3 0 \;;
#X scalar 1004.vertline 735 53 672 888 3 0 \;;
#X scalar 1004.vertline 750 53 672 0 4 1 \;;
#X scalar 1004.vertline 765 53 672 888 4 0 \;;
#X scalar 1004.vertline 780 53 672 888 4 0 \;;
#X scalar 1004.vertline 795 53 672 888 4 0 \;;
#X scalar 1004.vertline 810 53 672 666 4 0 \;;
#X scalar 1004.vertline 825 53 672 888 4 0 \;;
#X scalar 1004.vertline 840 53 672 888 4 0 \;;
#X scalar 1004.vertline 855 53 672 888 4 0 \;;
#X scalar 1004.vertline 870 53 672 666 4 0 \;;
#X scalar 1004.vertline 885 53 672 888 4 0 \;;
#X scalar 1004.vertline 900 53 672 888 4 0 \;;
#X scalar 1004.vertline 915 53 672 888 4 0 \;;
#X scalar 1004.vertline 930 53 672 666 4 0 \;;
#X scalar 1004.vertline 945 53 672 888 4 0 \;;
#X scalar 1004.vertline 960 53 672 888 4 0 \;;
#X scalar 1004.vertline 975 53 672 888 4 0 \;;
#X scalar 1004.vertline 990 53 672 0 5 0 \;;
#X scalar 1004.guibar 30 11 960 \;;
#X scalar 1004.gid.button 281 20 800 0 \;;
#X scalar 1004.gid.button 297 20 310 1 \;;
#X scalar 1004.gid.button 313 20 30 2 \;;
#X scalar 1004.gid.button 329 20 23 3 \;;
#X scalar 1004.gid.button 345 20 103 4 \;;
#X scalar 1004.gid.button 361 20 303 5 \;;
#X scalar 1004.vel 115 20 64 \;;
#X scalar 1004.dur 198 20 17 \;;
#X scalar 1004.mode.button 115 11 72 666 velocity \;;
#X scalar 1004.mode.button 198 11 72 666 duration \;;
#X scalar 1004.mode.button 281 11 95 666 gid \;;
#X scalar 1004.show.selector 387 20 31 555 0 none \;;
#X scalar 1004.show.selector 418 20 55 0 1 velocity \;;
#X scalar 1004.show.selector 473 20 55 555 2 duration \;;
#X scalar 1004.show.selector 528 20 37 555 3 gid \;;
#X scalar 1004.cursor 30 53 672 1 \;;
#X scalar 1004.pager 40 20 666 0 1 1 \;;
#X scalar 1004.pager 80 20 444 24 0 0 \;;
#X scalar 1004.note 150 165 15 13 0 0 64 1 400 1 444 \;;
#X scalar 1004.note 180 235 15 13 1 0 64 1 400 1 444 \;;
#X scalar 1004.note 45 1215 75 13 2 0 127 5 800 1 444 \;;
#X scalar 1004.note 285 1215 60 13 3 0 64 4 400 1 444 \;;
#X scalar 1004.note 285 1215 75 13 4 0 64 5 400 1 444 \;;
#X scalar 1004.note 570 319 165 13 5 0 51 11 300 1 444 \;;
#X scalar 1004.note 60 1215 15 13 6 0 64 1 400 1 444 \;;
#X scalar 1004.note 60 1215 15 13 7 0 64 1 400 1 444 \;;
#X scalar 1004.note 60 1215 15 13 8 0 64 1 400 1 444 \;;
#X scalar 1004.note 285 1215 15 13 9 0 64 1 400 1 444 \;;
#X scalar 1004.note 30 1215 210 13 10 0 115 17 800 1 444 \;;
#X scalar 1004.note 420 403 255 13 11 0 64 17 400 1 444 \;;
#X scalar 1004.note 525 445 255 13 12 0 64 17 400 1 444 \;;
#X scalar 1004.note 30 1215 105 13 13 0 64 7 400 1 444 \;;
#X restore 242 241 pd My_Happy_Sequencer;
#N canvas 170 116 568 256 misc 0;
#X obj 18 130 s \$0.to;
#X text 77 14 MISC METHODS;
#X msg 78 38 clear \, redraw;
#X text 179 38 clear all notes ('clear' alone only deletes all notes
internally without updating visual representation);
#X msg 78 78 dump;
#X text 179 78 dump complete state as a set of messages. If the set
of messages is later sent back to [unpunch] in the same order \, the
complete state can be restored;
#X connect 2 0 0 0;
#X connect 4 0 0 0;
#X restore 20 159 pd misc;
#N canvas 0 99 467 139 example.song 0;
#X obj 19 79 s \$0.to;
#N canvas 0 99 420 479 song-data-in-a-messagebox 0;
#X obj 16 22 inlet;
#X msg 16 52 clear \, set stepviswidth 15 \, set stepvisheight 14 \,
set stepsperpage 64 \, set pitchrange 48 \, set gridsubdivision 4 \,
set griddivision 4 \, page 1 \, note create 0 46 64 2 0 \, note create
3 53 64 1 0 \, note create 4 53 64 2 0 \, note create 7 46 64 1 0 \,
note create 8 47 64 2 0 \, note create 11 54 64 1 0 \, note create
12 54 64 2 0 \, note create 15 47 64 1 0 \, note create 16 44 64 2
0 \, note create 19 51 65 1 0 \, note create 20 51 64 2 0 \, note create
23 44 64 1 0 \, note create 24 49 64 2 0 \, note create 27 56 64 1
0 \, note create 28 56 64 2 0 \, note create 31 49 64 1 0 \, note create
0 68 64 1 0 \, note create 2 68 64 1 0 \, note create 5 68 64 1 0 \,
note create 7 70 64 1 0 \, note create 9 70 64 1 0 \, note create 11
70 64 2 0 \, note create 14 70 64 1 0 \, note create 16 70 64 1 0 \,
note create 18 70 64 1 0 \, note create 21 70 64 1 0 \, note create
23 68 64 1 0 \, note create 25 68 61 1 0 \, note create 27 68 64 2
0 \, note create 30 68 64 1 0 \, note create 0 61 64 1 0 \, note create
2 61 64 1 0 \, note create 5 61 64 1 0 \, note create 7 63 64 1 0 \,
note create 9 63 64 1 0 \, note create 11 63 64 2 0 \, note create
14 63 64 1 0 \, note create 16 63 64 1 0 \, note create 18 63 64 1
0 \, note create 21 63 64 1 0 \, note create 23 63 64 1 0 \, note create
25 63 64 1 0 \, note create 27 63 64 2 0 \, note create 18 66 64 1
0 \, note create 0 65 64 1 0 \, note create 2 65 64 1 0 \, note create
5 65 64 1 0 \, note create 9 66 64 1 0 \, note create 7 66 64 1 0 \,
note create 11 66 64 2 0 \, note create 14 66 64 1 0 \, note create
16 66 64 1 0 \, note create 21 66 64 1 0 \, note create 23 65 64 1
0 \, note create 25 65 64 1 0 \, note create 27 65 64 2 0 \, note create
30 65 64 1 0 \, note create 30 63 64 1 0 \,;
#X obj 16 426 outlet;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X restore 19 42 pd song-data-in-a-messagebox;
#X obj 19 14 bng 20 250 50 0 empty empty empty 17 7 0 10 -204786 -1
-1;
#X text 42 15 load song;
#X connect 1 0 0 0;
#X connect 2 0 1 0;
#X restore 222 56 pd example.song;
#N canvas 169 115 431 426 about 0;
#X text 17 15 unpunch - a configurable matrix sequencer;
#X text 17 31 -----------------------------------------;
#X text 18 224 The way it uses Pd's data structures comes with a few
quirks and not all graphic scalars are protected from accidental movement.
However \, the correct view can be restored at any time.;
#X text 18 288 The sequencer doesn't run its own clock \, but is meant
to be driven by an external clock in order to integrate it more easily
in already existing systems with their own master clock. This help
contains an example for a very simple clock.;
#X text 18 364 Report any bugs and feature request to the respective
github project.;
#X text 17 55 [unpunch] is a sequencer that allows to graphically edit
MIDI-like scores on a timeline \, a.k.a piano roll sequencer. Notes
can be created and deletec \, velocity and duration can be changed
with mouse actions. Additionally \, notes can be organized in groups
and operations like cloning \, pitch- or time-shifting can be applied
to groups. [unpunch] has a configurable interface to make it suitable
for various time signatures and display resolutions. The complete state
can be dumped for later restoration and it integrates well in existing
state saving systems. It is designed for real-time synchronisation
(if needed) and can also be used in systems like netpd.;
#X restore 20 39 pd about;
#X text 12 5 unpunch - a configurable matrix sequencer;
#X msg 358 116 note move 16 63 17 64;
#X connect 1 0 0 0;
#X connect 2 0 1 0;
#X connect 5 0 14 0;
#X connect 6 0 5 1;
#X connect 8 0 2 0;
#X connect 10 0 11 0;
#X connect 11 0 34 1;
#X connect 12 0 10 0;
#X connect 16 0 15 0;
#X connect 17 0 16 1;
#X connect 21 0 5 0;
#X connect 22 0 34 0;
#X connect 23 0 34 0;
#X connect 34 0 20 0;
#X connect 34 1 16 0;
#X connect 34 1 19 0;
#X connect 40 0 34 0;
